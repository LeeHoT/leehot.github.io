<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Leehotin&#39; Blog</title>
  
  <subtitle>你若安好 便是晴天</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-12-06T12:27:28.608Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Leehotin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Hexo在Github搭建搭建博客(MAC)</title>
    <link href="http://yoursite.com/2017/12/05/hexo-next-deploy-and-optimize-md/"/>
    <id>http://yoursite.com/2017/12/05/hexo-next-deploy-and-optimize-md/</id>
    <published>2017-12-05T05:45:28.000Z</published>
    <updated>2017-12-06T12:27:28.608Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/next.png" width="800px" height="200px"><br><a id="more"></a></p><h1 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这算是本人正经写的第一篇文章了，讲真还有些不习惯，自己平时也看的少，不知道大家都是什么风格，也不知道各位来自”名门正派”的豪杰喜欢什么画风。总之就是，有问题可以随时评论区留言，我这文章可能写的不好，但是吹牛调侃还是一流的，哇哈哈。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;简单的小牛皮就吹到这里，我们进入正题。</p><h1 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h1><h1 id="Hexo的搭建"><a href="#Hexo的搭建" class="headerlink" title="Hexo的搭建"></a>Hexo的搭建</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这部分内容主要讲述了本人在Mac环境下一步一步在<a href="https://github.com/" target="_blank" rel="noopener">Github</a>搭建<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>博客的艰险历程，过程稍微曲折，但是结果很完美，就像你们现在看到的这样。 文章所有内容都是在Mac下进行实际操作的，如果哪里和Windows的设置有不同的地方且没有提及的，还望大家留言，我会及时进行记录并更改。</p><h2 id="Hexo环境配置"><a href="#Hexo环境配置" class="headerlink" title="Hexo环境配置"></a>Hexo环境配置</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://hexo.io/docs/" target="_blank" rel="noopener">Hexo官方文档</a>对Hexo的下载安装已经有了非常详细的介绍，本人还是比较推荐官方文档，毕竟辣么权威。当然我这里也是可以滴，否则我现在还不知道在干啥。(<em>^__^</em>) 嘻嘻……</p><h3 id="要求-Requirements"><a href="#要求-Requirements" class="headerlink" title="要求(Requirements)"></a>要求(Requirements)</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;安装Hexo还是非常轻松的，但是为此需要先做一些事情，就好像盖房子怎么着都得先有地基吧</p><ul><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></li><li><a href="https://github.com/" target="_blank" rel="noopener">Github</a></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果你的电脑没有这两个那么就需要自己安装啦。</p><h3 id="安装Git-Install-Git"><a href="#安装Git-Install-Git" class="headerlink" title="安装Git(Install Git)"></a>安装Git(Install Git)</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Mac下的Xcode是自带Git的，如果没有Xcode，那么可以参考<a href="https://hexo.io/docs/" target="_blank" rel="noopener">Hexo官网</a>的方法</p><blockquote><h3 id="For-Mac-users"><a href="#For-Mac-users" class="headerlink" title="For Mac users"></a>For Mac users</h3><p>You may encounter some problems when compiling. Please install Xcode from App Store first. After Xcode is installed, open Xcode and go to Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install to install command line tools.</p></blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;大概意思就是：如果你在编译的时候遇到了问题，请从先App Store安装Xcode，安装完成之后打开Xcode,然后到 Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install to install command line tools. 安装命令行工具就OK啦<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当然如果是Windows的话可以点击<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">Git</a>下载安装，或者可以<a href="https://git-scm.com/download/" target="_blank" rel="noopener">选择Git版本</a>进行下载安装，这里就不赘述安装过程了。</p><h3 id="安装Node-js-Install-Node-js"><a href="#安装Node-js-Install-Node-js" class="headerlink" title="安装Node.js(Install Node.js)"></a>安装Node.js(Install Node.js)</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node.js主要是为了生成静态页面使用的，可以通过命令输入 node -v 来验证node.js版本，如果没有那就要考虑安装了，如果你的Mac安装了<a href="">homebrew</a>的话，那么很完美，直接使用一下命令进行安装即可<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br></pre></td></tr></table></figure></p><p><img src="/images/nodejs-version.png" alt="nodejs-versio"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install node</span><br></pre></td></tr></table></figure><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Git和Node.js都安装完成之后，关键时刻来了，安装Hexo，终端执行如下命令即可，其中-g表示全局安装。哈哈，好像就一步就完成了唉。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install -g hexo</span><br></pre></td></tr></table></figure></p><blockquote><p>这里需要注意一定要带上sudo(linux系统管理指令)命令，否则会权限不足。</p></blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然后选定一个你打算放博客的目录，然后执行 hexo init 命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog//初始化hexo 文件夹</span><br></pre></td></tr></table></figure></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其中blog就是未来你准备放博客的目录了，以后所有的操作都要在blog目录下进行操作了。所以我们就坐车都blog目录下。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;执行hexo g 命令生成静态页面<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;执行hexo s 启动本地的hexo服务器<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s//启动本地Hexo 服务器</span><br></pre></td></tr></table></figure></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个时候我们就可以通过访问<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 来访问了,然后就会看到如下图的界面了。感觉终于看到希望了，没错，我们离成功还有很远，哈哈！！！慢慢来吧。<br><img src="/images/hexo-s-localhost.png" alt="http://localhost:4000/"><br>如果需要更多的 hexo 功能命令可以直接在终端键入 hexo help 获取更多的命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo <span class="built_in">help</span></span><br></pre></td></tr></table></figure></p><h3 id="创建Github仓库并关联"><a href="#创建Github仓库并关联" class="headerlink" title="创建Github仓库并关联"></a>创建Github仓库并关联</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们这了假设你已经有了Github账号并已登录成功，因为我想注册个Github账号还是没有啥难度的吧，不过如果有不知道的可以留言，我还是会帮你解决滴。在这个过程中我们可能需要在浏览器和本地终端来回穿梭了，不过车很稳，大可放心。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先我们需要新建一个Github仓库，这里需要注意，仓库的名字为<strong>用户名.github.io</strong>，这是固定用法，比如我的Github用户名为LeehoT，所以我的仓库名为<a href="https://github.com/LeeHoT/leehot.github.io" target="_blank" rel="noopener">leehot.github.io</a>，没错，和你看到的是一样的，这里的英文是不区分大小写的。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;接下来回到我们的终端，cd 到我们刚才创建的blog目录下，内容很多，但是用的最多的就是</p><blockquote><p>   _config.yml文件<br>   source文件夹<br>   themes文件夹</p></blockquote><p>然后终端输入 vi _config.yml 打开配置文件，注意以后我们就称这个文件为<strong>站点配置文件</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi _config.yml</span><br></pre></td></tr></table></figure></p><p>打开文件之后直接输入 /deploy(搜索包含 deploy 的字符串)后回车或者直接翻到文件最低端，将 deploy 部分代码修改为如下代码，只需要把leehot替换为你的Github用户名即可。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/LeeHoT/leehot.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><blockquote><h2 id="号外号外"><a href="#号外号外" class="headerlink" title="号外号外"></a>号外号外</h2><p>这里的: 后边一定要有一个空格，在之后所有的修改中如果没有特殊说明的话，所有配置的参数的: 后边都要和参数值之间有个空格。</p></blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其中repository的地址可以在下图这个位置获取<br><img src="/images/repository-location.png" alt="repository-location"><br>接下来我们关联Github<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"leehotin(用户名)"</span></span><br><span class="line">$ git config --global user.email <span class="string">"leehot1009@gmail.com(你的邮箱)"</span></span><br></pre></td></tr></table></figure></p><p>然后在 blog文件夹下通过 hexo generate 或者 hexo g 来生成静态文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g//生成静态文件</span><br></pre></td></tr></table></figure></p><p>如果这个时候报错了，内容如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ERROR LOCAL hexo not found <span class="keyword">in</span> /blog</span><br><span class="line">ERROR Try running: <span class="string">'npm install hexo --sava'</span></span><br></pre></td></tr></table></figure></p><p>很明显，既然他都说尝试一下，那咱们就尝试一下呗,然后再运行 hexo g 会发现不报错了。</p><p>生成静态文件之后那就该部署啦，执行 hexo deploy 或者 hexo d 来部署项目<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d//部署项目</span><br></pre></td></tr></table></figure></p><p>如果这个时候又报错了，说什么： 无法连接Git或者找不到Git，那就通过安装 hexo-deployer-git 来解决了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$npm</span> install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>然后重新执行 hexo g 和 hexo d来重新部署</p><p>同时如果你的电脑并没有把ssh key关联到 Github的话，我们为了避免每次部署都输入密码，就需要将你电脑的key 关联到Github上，这里我们简单说一下绑定的方法</p><p>1、生成ssh key<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"注册Github时的邮箱"</span></span><br></pre></td></tr></table></figure></p><p>2、关联Github<br>生成的ssh key 默认早 ~/.ssh/id_rsa.pub 文件夹下，复制文件内容，然后坐车到 Github，点击右上角头像 -&gt; Settings -&gt; SSH and GPG keys -&gt; New SSH key -&gt; 粘贴内容后Add SSH key 即可完成</p><p>完事之后我们回到blog目录下，最一开始我们就说了所有的命令都是在这个文件夹下执行的，包括刚刚的 hexo g 和 hexo d 以及 hexo s<br>激动人心的时刻到了，让我们来自己创建我的第一篇博客吧<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"PostName"</span>//创建新的文章</span><br></pre></td></tr></table></figure></p><p>执行命令之后会在 ./source/_posts/下创建一个名为 PostName.md 的文件，然后就是用Markdown来操作文章了，至于编辑器，你可以选择高逼格的 vi ，也可以选用MacDown(如果你的地点是10.11.x，比较推荐使用Mou，由于我的电脑升到了High Sierra，目前是无福消受这个了)。接下来就是生成静态文件和部署了，这里还有一种写法 hexo d -g ,这个可以一步执行两步的内容。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d -g//生成静态文件并部署</span><br></pre></td></tr></table></figure></p><p>另外，我个人觉得每次部署之前执行一次 hexo clean 清理一下之前生成的静态文件和缓存会更好，不过我没有去深入研究，具体还有待考证，或者知道的大佬可以讲一讲，不胜感激。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean//清理静态文件和缓存</span><br></pre></td></tr></table></figure></p><p>哎呀，终于说的差不多了，到此我们算是有一个基本的壳子了。接下来要做的就是找到一个更好的主题来让自己的博客更加完美，我们会在之后的内容中介绍一个一个非常火热的主题： Next主题，这是目前为止Star最多的一个了，相信你会喜欢的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/next.png&quot; width=&quot;800px&quot; height=&quot;200px&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Hexo搭建与优化" scheme="http://yoursite.com/categories/Hexo%E6%90%AD%E5%BB%BA%E4%B8%8E%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="Hexo,Next" scheme="http://yoursite.com/tags/Hexo-Next/"/>
    
  </entry>
  
  <entry>
    <title>作为一个JAVA辣鸡的第一篇博客</title>
    <link href="http://yoursite.com/2017/12/05/the_first_blog/"/>
    <id>http://yoursite.com/2017/12/05/the_first_blog/</id>
    <published>2017-12-05T05:32:26.154Z</published>
    <updated>2017-12-05T05:32:26.154Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/pexels-photo-127904.jpeg" width="800px" height="200px"><br><a id="more"></a></p><h3 id="评论一番"><a href="#评论一番" class="headerlink" title="评论一番"></a>评论一番</h3><p>第一个文章真不知道写点啥，不如大家来评论一下我这个人，敞开了说，反正我不知道你是谁！🐶🐶🐶🐶🐶🐶🐶🐶</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/pexels-photo-127904.jpeg&quot; width=&quot;800px&quot; height=&quot;200px&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://yoursite.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="辣鸡" scheme="http://yoursite.com/tags/%E8%BE%A3%E9%B8%A1/"/>
    
  </entry>
  
</feed>
